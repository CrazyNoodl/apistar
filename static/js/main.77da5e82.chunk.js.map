{"version":3,"sources":["Components/Film/Film.module.scss","Components/Main/Main.js","Components/Home/Home.js","Components/Planets/Planets.js","Components/Starships/Starships.js","Components/Film/Film.js","Components/Films/Films.js","Components/Planet/Planet.js","Components/Starship/Starship.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","useStyles","makeStyles","root","width","marginBottom","backgroundColor","border","color","backdropFilter","display","flexDirection","minHeight","minWidth","flexGrow","marginRight","suptitle","fontSize","cursor","title","textTransform","fontWeight","flex","inner","pos","withRouter","props","classes","Card","className","CardContent","Typography","gutterBottom","about","episode_id","variant","component","release_date","CardActions","onClick","history","push","url","split","length","size","Home","state","films","loading","search","sorting","method","setState","prevState","sort","a","b","nameA","nameB","prewState","searching","e","target","value","fetch","req","json","data","this","results","term","CircularProgress","ButtonGroup","aria-label","Button","onChange","type","placeholder","filter","x","toLowerCase","includes","map","film","index","key","Component","useState","setLoading","planets","setPlanets","useEffect","requests","urls","Promise","all","then","responses","r","fetchData","List","planet","name","ListItem","button","ListItemText","modifiedUrl","getUrl","primary","Divider","light","starships","setStarships","console","error","starship","Film","setFilm","setLodaing","poster","setPoster","location","pathname","res","urlPoster","reqPoster","dataPoster","poster_path","theme","margin","spacing","Box","s","imgwrapper","img","src","alt","left","opening_crawl","director","producer","buttons","startIcon","disabled","bottom","setFilms","Planet","setPlanet","rotation_period","orbital_period","diameter","climate","gravity","terrain","goBack","Starship","setStarship","model","manufacturer","cost_in_credits","crew","Boolean","window","hostname","match","mainApp","to","exact","path","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.77da5e82.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Film_root__EaBaw\",\"imgwrapper\":\"Film_imgwrapper__3YVdM\",\"img\":\"Film_img__2_Y46\",\"left\":\"Film_left__3q91q\",\"bottom\":\"Film_bottom__2_Op3\",\"buttons\":\"Film_buttons__24zMM\"};","import { withRouter } from 'react-router-dom'\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport './Main.scss'\n\nconst useStyles = makeStyles({\n  root: {\n    width: '32%',\n    marginBottom: 20,\n    backgroundColor: 'transparent',\n    border: '3px solid white',\n    color: 'white',\n    backdropFilter: 'blur(3px)',\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: 200,\n    minWidth: 250,\n    flexGrow: 1,\n    marginRight: 10,\n  },\n  suptitle: {\n    fontSize: 14,\n    color: 'white',\n    cursor: 'default',\n  },\n  title: {\n    textTransform: 'uppercase',\n    color: 'white',\n    fontWeight: 900,\n    fontSize: 25,\n    cursor: 'default',\n    flex: 1,\n  },\n  inner: {\n    flex: 1,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nfunction Main(props) {\n  const classes = useStyles();\n\n  const getUrl = (url) => {\n    url = url.split('/');\n    return url[url.length - 2];\n  }\n\n  return (\n    <Card className={classes.root}>\n      <CardContent className={classes.inner}>\n        <Typography className={classes.suptitle} color=\"textSecondary\" gutterBottom>\n          Episod {props.about.episode_id}\n        </Typography>\n        <Typography className={classes.title} variant=\"h4\" component=\"span\">\n          {props.about.title}\n        </Typography>\n        <Typography className={classes.suptitle} color=\"textSecondary\" gutterBottom>\n          Release Data {props.about.release_date}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <button className=\"href\" onClick={() => props.history.push('/films/' + getUrl(props.about.url))} size=\"small\">Read More</button>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default withRouter(Main);","import React, { Component } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Main from '../Main/Main';\nimport './Home.scss';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\n\nfunction searchingFor(term) {\n  return function (x) {\n    return x.title.toLowerCase().includes(term.toLowerCase()) || !term;\n  }\n}\n\nclass Home extends Component {\n  state = {\n    films: null,\n    loading: true,\n    search: '',\n  }\n\n  async componentDidMount() {\n    const url = 'https://swapi.co/api/films';\n    const req = await fetch(url);\n    const data = await req.json();\n    this.setState({\n      films: data.results,\n      loading: false,\n    })\n  }\n\n  sorting = (method) => {\n    switch (method) {\n      case 'date':\n        this.setState(prevState => {\n          return {\n            films: prevState.films.sort((a, b) => {\n              let nameA = a.release_date,\n                nameB = b.release_date\n              if (nameA < nameB)\n                return -1\n              if (nameA > nameB)\n                return 1\n              return 0\n            }),\n          }\n        });\n        break;\n      case 'name':\n        this.setState(prevState => {\n          return {\n            films: prevState.films.sort((a, b) => {\n              let nameA = a.title,\n                nameB = b.title\n              if (nameA < nameB)\n                return -1\n              if (nameA > nameB)\n                return 1\n              return 0\n            }),\n          }\n        });\n        break;\n      case 'episod':\n        this.setState(prewState => {\n          return {\n            films: prewState.films.sort((a, b) => a.episode_id - b.episode_id)\n          }\n        });\n        break;\n      default:\n        return this.state;\n    }\n  }\n\n  searching = (e) => {\n    this.setState(\n      {\n        search: e.target.value,\n      });\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.loading || !this.state.films ? (\n          <div className=\"spinner\">\n            <CircularProgress color=\"secondary\" size={200} />\n          </div>\n        ) : (\n            <div className='container'>\n              <div className='control'>\n                <ButtonGroup size=\"large\" color=\"inherit\" variant=\"text\" aria-label=\"large outlined primary button group\">\n                  <Button onClick={() => this.sorting('name')}>Sort by Name</Button>\n                  <Button onClick={() => this.sorting('episod')}>Sort by Episod</Button>\n                  <Button onClick={() => this.sorting('date')}>Sort by Date</Button>\n                </ButtonGroup>\n                <input onChange={this.searching} type=\"text\" placeholder=\"live search\"></input>\n              </div>\n              <div className='table'>\n                {this.state.films.filter(searchingFor(this.state.search)).map((film, index) => (\n                  <Main\n                    key={index}\n                    about={film}\n                  />\n                )\n                )\n                }\n              </div>\n            </div >\n          )\n        }\n      </>\n    );\n  }\n}\n\nexport default Home;","import React, { useState, useEffect, Fragment } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withRouter } from 'react-router-dom'\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport './Planets.scss'\n\nfunction Planets(props) {\n\n  const [loading, setLoading] = useState(true)\n  const [planets, setPlanets] = useState([])\n\n  const getUrl = (url) => {\n    let modifiedUrl = url.split('/');\n\n    return modifiedUrl[modifiedUrl.length - 2];\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      let requests = props.urls.map(url => fetch(url));\n\n      await Promise.all(requests)\n        .then(async responses => await Promise.all(responses.map(r => r.json())))\n        .then(planets => setPlanets(planets))\n\n      setLoading(false);\n    };\n\n    fetchData();\n  }, [props]);\n\n  return (\n    <>\n      {loading ? (\n        <CircularProgress color=\"secondary\" size={50} />\n      ) : (\n          <>\n            <List className=\"list\" component=\"ul\" aria-label=\"secondary mailbox folders\">\n              <h3>PLANETS</h3>\n              {planets.map((planet, index) =>\n                <Fragment key={planet.name}>\n                  <ListItem button>\n                    <ListItemText\n                      onClick={() => props.history.push('/planets/' + getUrl(props.urls[index]))}\n                      primary={planet.name}\n                    />\n                  </ListItem>\n                  <Divider light={true} />\n                </Fragment>\n              )}\n            </List>\n          </>\n        )\n      }\n    </>\n  );\n}\n\nexport default withRouter(Planets);","import React, { useState, useEffect } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport { withRouter } from 'react-router-dom';\n\nfunction Starships(props) {\n\n  const [loading, setLoading] = useState(true)\n  const [starships, setStarships] = useState([])\n\n  const getUrl = (url) => {\n    let modifiedUrl = url.split('/');\n\n    return modifiedUrl[modifiedUrl.length - 2];\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        let requests = props.urls.map(url => fetch(url));\n\n        await Promise.all(requests)\n          .then(async responses => await Promise.all(responses.map(r => r.json())))\n          .then(data => setStarships(data));\n\n        setLoading(false)\n\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    fetchData();\n  }, [props]);\n\n  return (\n    <>\n      {loading ? (\n        <CircularProgress color=\"secondary\" />\n      ) : (\n          <List className=\"list list--left\" component=\"ul\" aria-label=\"secondary mailbox folders\">\n            <h3>STARSHIPS</h3>\n            {starships.map((starship, index) =>\n              <>\n                <ListItem button>\n                  <ListItemText\n                    onClick={() => props.history.push('/starships/' + getUrl(props.urls[index]))}\n                    key={index}\n                    primary={starship.name} />\n                </ListItem>\n                <Divider light={true} />\n              </>\n            )}\n          </List>\n        )\n      }\n    </>\n  );\n}\n\nexport default withRouter(Starships);","import React, { useState, useEffect } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport s from './Film.module.scss';\nimport Planets from '../Planets/Planets';\nimport Starships from '../Starships/Starships';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SaveIcon from '@material-ui/icons/Save';\n\nfunction Film(props) {\n  const [film, setFilm] = useState(null)\n  const [loading, setLodaing] = useState(true)\n  const [poster, setPoster] = useState(null)\n  const [starships, setStarships] = useState(false)\n  const [planets, setPlanets] = useState(false)\n\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const res = await fetch(`https://swapi.co/api${props.location.pathname}`);\n        const data = await res.json();\n        const urlPoster = `https://api.themoviedb.org/3/search/movie?api_key=0ee32771ac12a2b0b6c306f4f382cdf3&query=${data.title}`;\n        const reqPoster = await fetch(urlPoster);\n        const dataPoster = await reqPoster.json();\n\n        setFilm(data);\n        setPoster(dataPoster.results[0].poster_path);\n        setLodaing(false);\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    fetchData();\n  }, [props]);\n\n  const useStyles = makeStyles(theme => ({\n    button: {\n      margin: theme.spacing(1),\n    },\n  }));\n\n  const classes = useStyles();\n  return (\n    <>\n      {loading || !film ? (\n        <div className=\"spinner\">\n          <CircularProgress color=\"secondary\" size={200} />\n        </div>\n      ) : (\n          <Box display=\"flex\" className={s.root}>\n            <div className={s.imgwrapper}>\n              <img className={s.img} src={`https://image.tmdb.org/t/p/w500${poster}`} alt={film.title} />\n            </div>\n            <div className={s.left}>\n              <h1>{film.title}</h1>\n              <h2>Episod {film.episode_id}, Release Date: {film.release_date}</h2>\n              <p className=\"text\" >{film.opening_crawl}</p>\n              <h3>Director: {film.director}</h3>\n              <h3>Producer: {film.producer}</h3>\n              <div className={s.buttons}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"inherit\"\n                  size=\"large\"\n                  className={classes.button}\n                  startIcon={<SaveIcon />}\n                  disabled={planets ? true : false}\n                  onClick={() => setPlanets(true)}\n                >\n                  Planets\n                </Button>\n\n                <Button\n                  variant=\"outlined\"\n                  color=\"inherit\"\n                  size=\"large\"\n                  className={classes.button}\n                  startIcon={<SaveIcon />}\n                  disabled={starships ? true : false}\n                  onClick={() => setStarships(true)}\n                >\n                  Starships\n              </Button>\n              </div>\n              <div className={s.bottom}>\n                {planets ? <Planets urls={film.planets} /> : null}\n                {starships ? <Starships urls={film.starships} /> : null}\n              </div>\n            </div>\n          </Box>\n        )\n      }\n    </>\n  );\n}\n\nexport default Film;","import React, { useState, useEffect } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withRouter } from 'react-router-dom'\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\n\n\nfunction Films(props) {\n\n  const [loading, setLoading] = useState(true)\n  const [films, setFilms] = useState([])\n\n  const getUrl = (url) => {\n    let modifiedUrl = url.split('/');\n\n    return modifiedUrl[modifiedUrl.length - 2];\n  }\n\n\n  useEffect(() => {\n    async function fetchData() {\n\n      let requests = props.urls.map(url => fetch(url));\n\n      await Promise.all(requests)\n        .then(async responses => await Promise.all(responses.map(r => r.json())))\n        .then(data => setFilms(data));\n\n      setLoading(false)\n    };\n\n    fetchData();\n  }, [props]);\n\n  return (\n    <>\n      {loading || !films ? (\n        <div className=\"spinner\">\n          <CircularProgress color=\"secondary\" size={200} />\n        </div>\n      ) : (\n          <List className=\"list\" component=\"ul\" aria-label=\"secondary mailbox folders\">\n            <h3>FILMS</h3>\n            {films.map((film, index) =>\n              <>\n                <ListItem button key={index}>\n                  <ListItemText\n                    onClick={() => props.history.push('/films/' + getUrl(props.urls[index]))}\n                    primary={film.title}\n                  />\n                </ListItem>\n                <Divider light={true} />\n              </>\n            )}\n          </List>\n        )\n      }\n    </>\n  );\n}\n\nexport default withRouter(Films);","import React, { useState, useEffect } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Films from '../Films/Films';\nimport Button from '@material-ui/core/Button';\nimport './Planet.scss'\n\nfunction Planet(props) {\n\n  const [loading, setLodaing] = useState(true)\n  const [planet, setPlanet] = useState(null)\n  const [films, setFilms] = useState(false)\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const res = await fetch(`https://swapi.co/api${props.location.pathname}`);\n        const data = await res.json();\n        setPlanet(data)\n        setLodaing(false)\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    fetchData();\n  }, [props]);\n\n  return (\n    <>\n      {loading || !planet ? (\n        <CircularProgress color=\"secondary\" />\n      ) : (\n          <div className=\"planet\">\n            <h1>{planet.name}</h1>\n            <h3>Rotation Period {planet.rotation_period}</h3>\n            <h3>Orbital Period: {planet.orbital_period}</h3>\n            <h3>Diameter: {planet.diameter}</h3>\n            <h3>Climate: {planet.climate}</h3>\n            <h3>Gravity: {planet.gravity}</h3>\n            <p>Terrain: {planet.terrain}</p>\n\n            <Button\n              variant=\"outlined\"\n              color=\"inherit\"\n              size=\"large\"\n              disabled={films ? true : false}\n              onClick={() => setFilms(true)}\n            >\n              FILMS\n            </Button>\n            <Button\n              variant=\"outlined\"\n              color=\"inherit\"\n              size=\"large\"\n              onClick={() => props.history.goBack()}\n            >\n              GO BACK\n            </Button>\n            {films ? <Films urls={planet.films} /> : null}\n          </div>\n        )\n      }\n    </>\n  );\n}\n\nexport default Planet;","import React, { useState, useEffect } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Films from '../Films/Films';\nimport Button from '@material-ui/core/Button';\n\nfunction Starship(props) {\n\n  const [loading, setLodaing] = useState(true)\n  const [starship, setStarship] = useState(null)\n  const [films, setFilms] = useState(false)\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const res = await fetch(`https://swapi.co/api${props.location.pathname}`);\n        const data = await res.json();\n\n        setStarship(data)\n        setLodaing(false)\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    fetchData();\n  }, [props]);\n\n  return (\n    <>\n      {loading || !starship ? (\n        <CircularProgress color=\"secondary\" size={200} />\n      ) : (\n          <div className=\"planet\">\n            <h1>{starship.name}</h1>\n            <h3>Model {starship.model}</h3>\n            <h3>Manufacturer: {starship.manufacturer}</h3>\n            <h3>Cost In Credits: {starship.cost_in_credits}</h3>\n            <h3>Length: {starship.length}</h3>\n            <p>Crew: {starship.crew}</p>\n\n            <Button\n              variant=\"outlined\"\n              color=\"inherit\"\n              size=\"large\"\n              disabled={films ? true : false}\n              onClick={() => setFilms(true)}\n            >\n              FILMS\n            </Button>\n            <Button\n              variant=\"outlined\"\n              color=\"inherit\"\n              size=\"large\"\n              onClick={() => props.history.goBack()}\n            >\n              GO BACK\n            </Button>\n            {films ? <Films urls={starship.films} /> : null}\n          </div>\n        )\n      }\n    </>\n  );\n}\n\nexport default Starship;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst mainApp = <App />;\n\nReactDOM.render(mainApp, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\nimport Home from './Components/Home/Home';\nimport Film from './Components/Film/Film';\nimport Planet from './Components/Planet/Planet';\nimport Starship from './Components/Starship/Starship';\nimport './App.css';\n\nexport default function App() {\n  return (\n    <Router>\n      <div className='container'>\n        <Link className=\"nav\" to=\"/\">Home</Link>\n\n        <hr />\n\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/films/:id\" component={Film} />\n          <Route path=\"/planets/:id\" component={Planet} />\n          <Route path=\"/starships/:id\" component={Starship} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n"],"sourceRoot":""}