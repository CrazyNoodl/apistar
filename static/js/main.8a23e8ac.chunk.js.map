{"version":3,"sources":["Components/Film/Film.module.scss","constants/api.js","Components/redux/actions.js","Components/redux/rootReducer.js","Components/redux/selectors.js","utils/index.js","Components/Main/Main.js","constants/text.js","Components/Home/Home.js","Components/Planets/Planets.js","Components/Starships/Starships.js","Components/Film/Film.js","Components/Films/Films.js","Components/Planet/Planet.js","Components/Starship/Starship.js","Components/NotFound/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","API","ACTION_TYPES","START_LOADING","LOAD_FILMS","SET_ERROR","STOP_LOADING","SORT_BY_NAME","SORT_BY_DATE","SORT_BY_EPISOD","SORT_BY_LIVE","LOADING_PLANETS","LOADING_STARSHIPS","SAVE_CURRENT_FILM","SAVE_CURRENT_PLANET","SAVE_CURRENT_STARSHIP","SAVE_NEED_FILMS","loadingStarships","data","type","payload","saveCurrentFilm","saveNeedFilms","saveCurrentPlanet","saveCurrentShip","loadFilms","dispatch","fetch","then","res","json","results","loadingFilms","catch","error","message","setError","finally","initiaState","isLoading","films","needFilms","term","filmsLoaded","starships","planets","needPlanets","needStarships","showPlanets","showStarships","currentFilm","currentPlanet","currentShip","rootReducer","state","action","console","log","filter","film","find","item","url","newList","copyPlanets","currentPlanets","testPlanet","i","a","copyStarships","currentStarships","testStarships","findIndex","CLICKED_FILMS","clickedFilm","sort","b","nameA","title","nameB","episode_id","release_date","getFilms","getIsLoading","getFilmsLoaded","getTermForSearch","getError","getUrl","split","length","changeHttpToHttps","urls","map","replace","useStyles","makeStyles","root","width","marginBottom","backgroundColor","border","color","backdropFilter","display","flexDirection","minHeight","minWidth","flexGrow","marginRight","suptitle","fontSize","cursor","textTransform","fontWeight","flex","inner","pos","withRouter","props","classes","useSelector","index","useDispatch","Card","className","CardContent","Typography","gutterBottom","about","variant","component","CardActions","onClick","history","push","size","TEXT","Home","this","onName","onEpisod","onDate","searching","CircularProgress","ButtonGroup","aria-label","Button","onChange","placeholder","x","toLowerCase","includes","searchingFor","key","Component","connect","e","event","target","value","savePlanets","loadingPlanets","useState","loading","setLoading","useEffect","newUrls","requests","Promise","all","responses","planet","fetchData","List","name","ListItem","button","ListItemText","primary","Divider","light","starship","setLodaing","setStarships","setPlanets","location","pathname","response","theme","margin","spacing","Box","s","left","opening_crawl","director","producer","buttons","startIcon","disabled","bottom","r","Planet","setFilms","rotation_period","orbital_period","diameter","climate","gravity","terrain","population","goBack","Starship","ship","model","manufacturer","cost_in_credits","crew","NotFound","App","to","exact","path","Film","Boolean","window","hostname","match","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8a23e8ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Film_root__EaBaw\",\"imgwrapper\":\"Film_imgwrapper__3YVdM\",\"img\":\"Film_img__2_Y46\",\"left\":\"Film_left__3q91q\",\"bottom\":\"Film_bottom__2_Op3\",\"buttons\":\"Film_buttons__24zMM\"};","export const API = 'https://swapi.dev/api';\n\nexport const ENDPOINTS = {\n  FILMS: `${API}/films/`,\n}","import { ENDPOINTS } from '../../constants/api';\n\nconst ACTION_TYPES = {\n  START_LOADING: 'START_LOADING',\n  LOAD_FILMS: 'LOAD_FILMS',\n  SET_ERROR: 'SET_ERROR',\n  STOP_LOADING: 'STOP_LOADING',\n  SORT_BY_NAME: 'SORT_BY_NAME',\n  SORT_BY_DATE: 'SORT_BY_DATE',\n  SORT_BY_EPISOD: 'SORT_BY_EPISOD',\n  SORT_BY_LIVE: 'SORT_BY_LIVE',\n  LOADING_PLANETS: 'LOADING_PLANETS',\n  LOADING_STARSHIPS: 'LOADING_STARSHIPS',\n  SAVE_CURRENT_FILM: 'SAVE_CURRENT_FILM',\n  SAVE_CURRENT_PLANET: 'SAVE_CURRENT_PLANET',\n  SAVE_CURRENT_STARSHIP: 'SAVE_CURRENT_STARSHIP',\n  SAVE_NEED_FILMS: 'SAVE_NEED_FILMS',\n}\n\nconst startLoading = () => {\n  return {\n    type: ACTION_TYPES.START_LOADING,\n  }\n}\n\nconst stopLoading = () => {\n  return {\n    type: ACTION_TYPES.STOP_LOADING,\n  }\n}\n\nconst loadingFilms = (data) => {\n  return {\n    type: ACTION_TYPES.LOAD_FILMS,\n    payload: data.results,\n  }\n}\n\nexport const loadingPlanets = (data) => {\n  return {\n    type: ACTION_TYPES.LOADING_PLANETS,\n    payload: data,\n  }\n}\n\nexport const loadingStarships = (data) => {\n  return {\n    type: ACTION_TYPES.LOADING_STARSHIPS,\n    payload: data,\n  }\n}\n\nexport const saveCurrentFilm = (data) => {\n  return {\n    type: ACTION_TYPES.SAVE_CURRENT_FILM,\n    payload: data,\n  }\n}\n\nexport const saveNeedFilms = (data) => {\n  return {\n    type: ACTION_TYPES.SAVE_NEED_FILMS,\n    payload: data,\n  }\n}\n\n\nexport const saveCurrentPlanet = (data) => {\n  return {\n    type: ACTION_TYPES.SAVE_CURRENT_PLANET,\n    payload: data,\n  }\n}\n\nexport const saveCurrentShip = (data) => {\n  return {\n    type: ACTION_TYPES.SAVE_CURRENT_STARSHIP,\n    payload: data,\n  }\n}\n\nexport const setError = (error) => {\n  return {\n    type: ACTION_TYPES.SET_ERROR,\n    payload: error.message,\n  }\n}\n\nexport const sortByName = () => {\n  return {\n    type: ACTION_TYPES.SORT_BY_NAME,\n  }\n}\n\nexport const sortByEpisod = () => {\n  return {\n    type: ACTION_TYPES.SORT_BY_EPISOD,\n  }\n}\n\nexport const sortByDate = () => {\n  return {\n    type: ACTION_TYPES.SORT_BY_DATE,\n  }\n}\n\nexport const sortByLive = (event) => {\n  return {\n    type: ACTION_TYPES.SORT_BY_LIVE,\n    payload: event,\n  }\n}\n\nexport const loadFilms = () => dispatch => {\n\n  dispatch(startLoading());\n\n  fetch('https://swapi.dev/api/films/')\n    .then(res => res.json())\n    .then(data => dispatch(loadingFilms(data)))\n    .catch((error) => dispatch(setError(error)))\n    .finally(() => dispatch(stopLoading()))\n}\n\nexport default ACTION_TYPES;","import ACTION_TYPES from './actions';\n\nconst initiaState = {\n  isLoading: true,\n  films: [],\n  needFilms: null,\n  term: '',\n  error: null,\n  filmsLoaded: false,\n  starships: null,\n  planets: null,\n  needPlanets: null,\n  needStarships: null,\n  showPlanets: null,\n  showStarships: null,\n  currentFilm: null,\n  currentPlanet: null,\n  currentShip: null,\n}\n\nfunction rootReducer(state = initiaState, action) {\n  console.log(action)\n  switch (action.type) {\n    case ACTION_TYPES.START_LOADING:\n\n      return {\n        ...state,\n        error: null,\n        isLoading: true,\n      };\n\n    case ACTION_TYPES.LOAD_FILMS:\n\n      return {\n        ...state,\n        isLoading: true,\n        films: action.payload,\n      };\n\n    case ACTION_TYPES.SAVE_CURRENT_PLANET:\n\n      let planets = state.films.filter(film => action.payload.films.find(item => item === film.url))\n\n      return {\n        ...state,\n        currentPlanet: action.payload,\n        needFilms: planets,\n        needPlanets: null,\n      };\n\n    case ACTION_TYPES.SAVE_CURRENT_STARSHIP: {\n\n      let planets = state.films.filter(film => action.payload.films.find(item => item === film.url))\n\n      return {\n        ...state,\n        currentShip: action.payload,\n        needFilms: planets,\n        needStarships: null,\n      }\n    }\n\n    case ACTION_TYPES.LOADING_PLANETS: {\n\n      if (state.planets === null) {\n\n        return {\n          ...state,\n          planets: action.payload,\n          showPlanets: action.payload,\n        }\n      }\n\n      let newList = [...state.planets, ...action.payload];\n      let copyPlanets = [...newList]\n\n      let currentPlanets = state.currentFilm.planets;\n      let testPlanet = copyPlanets.filter(i => currentPlanets.find(a => a === i.url));\n\n      return {\n        ...state,\n        showPlanets: testPlanet,\n        planets: newList,\n      };\n    }\n\n    case ACTION_TYPES.LOADING_STARSHIPS: {\n\n      if (state.starships === null) {\n\n        return {\n          ...state,\n          starships: action.payload,\n          showStarships: action.payload,\n        }\n      }\n\n      let newList = [...state.starships, ...action.payload];\n      let copyStarships = [...newList];\n      let currentStarships = state.currentFilm.starships;\n      let testStarships = copyStarships.filter(i => currentStarships.find(a => a === i.url));\n\n      return {\n        ...state,\n        showStarships: testStarships,\n        starships: newList,\n      }\n    }\n\n    case ACTION_TYPES.SAVE_CURRENT_FILM: {\n\n      if (state.planets === null && state.starships === null) {\n        return {\n          ...state,\n          currentFilm: action.payload,\n          needPlanets: action.payload.planets,\n          needStarships: action.payload.starships,\n        }\n      }\n\n      if (state.starships === null) {\n        let currentPlanets = action.payload.planets;\n        let planets = state.planets;\n        let needPlanets = currentPlanets.filter(i => planets.findIndex(a => a.url === i) === -1)\n\n        return {\n          ...state,\n          currentFilm: action.payload,\n          needPlanets,\n        };\n      }\n\n      if (state.planets === null) {\n        let currentStarships = action.payload.starships;\n        let starships = state.starships;\n        let needStarships = currentStarships.filter(i => starships.findIndex(a => a.url === i) === -1);\n\n        return {\n          ...state,\n          currentFilm: action.payload,\n          needStarships,\n        };\n      }\n\n      let currentPlanets = action.payload.planets;\n      let currentStarships = action.payload.starships;\n      let planets = state.planets;\n      let starships = state.starships;\n      let needPlanets = currentPlanets.filter(i => planets.findIndex(a => a.url === i) === -1)\n      let needStarships = currentStarships.filter(i => starships.findIndex(a => a.url === i) === -1);\n\n      return {\n        ...state,\n        currentFilm: action.payload,\n        needPlanets,\n        needStarships,\n      }\n    }\n\n    case ACTION_TYPES.SAVE_NEED_FILMS:\n\n      return {\n        ...state,\n        needFilms: action.payload,\n      };\n\n    case ACTION_TYPES.SET_ERROR:\n\n      return {\n        ...state,\n        isLoading: false,\n        films: null,\n        error: action.payload,\n      };\n\n    case ACTION_TYPES.STOP_LOADING:\n      return {\n        ...state,\n        isLoading: false,\n        filmsLoaded: true,\n      }\n\n    case ACTION_TYPES.CLICKED_FILMS:\n\n      return {\n        ...state,\n        clickedFilm: action.payload,\n      }\n\n    case ACTION_TYPES.SORT_BY_NAME: {\n      const newList = [...state.films];\n\n      newList.sort((a, b) => {\n        let nameA = a.title,\n          nameB = b.title\n        if (nameA < nameB)\n          return -1\n        if (nameA > nameB)\n          return 1\n        return 0\n      })\n\n      return {\n        ...state,\n        films: newList,\n      }\n    }\n    case ACTION_TYPES.SORT_BY_EPISOD: {\n      const newList = [...state.films];\n      newList.sort((a, b) => a.episode_id - b.episode_id)\n\n      return {\n        ...state,\n        films: newList,\n      }\n    }\n    case ACTION_TYPES.SORT_BY_DATE: {\n      const newList = [...state.films];\n      newList.sort((a, b) => {\n        let nameA = a.release_date,\n          nameB = b.release_date\n        if (nameA < nameB)\n          return -1\n        if (nameA > nameB)\n          return 1\n        return 0\n      });\n\n      return {\n        ...state,\n        films: newList,\n      }\n    }\n\n    case ACTION_TYPES.SORT_BY_LIVE: {\n\n      return {\n        ...state,\n        term: action.payload,\n      }\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;\n","export const getFilms = (state) => {\n  return state.films\n}\n\nexport const getIsLoading = (state) => {\n  return state.isLoading\n}\n\nexport const getFilmsLoaded = (state) => {\n  return state.filmsLoaded\n}\n\nexport const getTermForSearch = (state) => {\n  return state.term\n}\n\nexport const getError = (state) => {\n  return state.error\n}","export const getUrl = (url) => {\n  url = url.split('/');\n  return url[url.length - 2];\n}\n\nexport const changeHttpToHttps = (urls) => {\n  return urls.map(url => url.replace(\"http\", \"https\"))\n}","import React from 'react';\nimport { withRouter } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveCurrentFilm } from '../redux/actions';\nimport { getUrl } from '../../utils/index';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport './Main.scss'\n\nconst useStyles = makeStyles({\n  root: {\n    width: '32%',\n    marginBottom: 20,\n    backgroundColor: 'transparent',\n    border: '3px solid white',\n    color: 'white',\n    backdropFilter: 'blur(3px)',\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: 200,\n    minWidth: 250,\n    flexGrow: 1,\n    marginRight: 10,\n  },\n  suptitle: {\n    fontSize: 14,\n    color: 'white',\n    cursor: 'default',\n  },\n  title: {\n    textTransform: 'uppercase',\n    color: 'white',\n    fontWeight: 900,\n    fontSize: 25,\n    cursor: 'default',\n    flex: 1,\n  },\n  inner: {\n    flex: 1,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nfunction Main(props) {\n  const classes = useStyles();\n\n  const { film } = useSelector(state => ({ //вместо mapStateToProps\n    film: state.films[props.index],\n  }));\n\n  const dispatch = useDispatch(); //вместо mapDispatchToProps\n\n  return (\n    <Card className={classes.root}>\n      <CardContent className={classes.inner}>\n        <Typography className={classes.suptitle} color=\"textSecondary\" gutterBottom>\n          Episod {props.about.episode_id}\n        </Typography>\n        <Typography className={classes.title} variant=\"h4\" component=\"span\">\n          {props.about.title}\n        </Typography>\n        <Typography className={classes.suptitle} color=\"textSecondary\" gutterBottom>\n          Release Data {props.about.release_date}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <button className=\"href\" onClick={() => {\n          props.history.push('/films/' + getUrl(props.about.url))\n          dispatch(saveCurrentFilm(film))\n        }} size=\"small\">Read More</button>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default withRouter(Main);","export const TEXT = {\n  ERROR_LOADING: `Try again`,\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { sortByName, sortByEpisod, sortByDate, loadFilms, sortByLive } from '../redux/actions';\nimport { getFilms, getIsLoading, getFilmsLoaded, getTermForSearch, getError } from '../redux/selectors';\nimport Main from '../Main/Main';\nimport { TEXT } from '../../constants/text';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport './Home.scss';\n\nfunction searchingFor(term) {\n  return function (x) {\n    return x.title.toLowerCase().includes(term.toLowerCase()) || !term;\n  }\n}\n\nclass Home extends Component {\n\n  componentDidMount() {\n    const { loadFilms, filmsLoaded } = this.props\n\n    if (!filmsLoaded) {\n      loadFilms()\n    }\n  }\n\n  render() {\n    const { films, isLoading, onName, onEpisod, onDate, searching, term, error } = this.props\n\n    return (\n      <>\n        {error ? (\n          <>\n            {error}\n            <button onClick={this.props.loadFilms}>{TEXT.ERROR_LOADING}</button>\n          </>\n        ) : (\n            <>\n              {isLoading ? ( // ??????????\n                <div className=\"spinner\">\n                  <CircularProgress color=\"secondary\" size={200} />\n                </div>\n              ) : (\n                  <div className='container'>\n                    <div className='control'>\n                      <ButtonGroup size=\"large\" color=\"inherit\" variant=\"text\" aria-label=\"large outlined primary button group\">\n                        <Button onClick={onName}>Sort by Name</Button>\n                        <Button onClick={onEpisod}>Sort by Episod</Button>\n                        <Button onClick={onDate}>Sort by Date</Button>\n                      </ButtonGroup>\n                      <input onChange={searching} type=\"text\" placeholder=\"live search\"></input>\n                    </div>\n                    <div className='table'>\n                      {films.filter(searchingFor(term)).map((film, index) => (\n                        <Main\n                          key={film.episode_id}\n                          about={film}\n                          index={index}\n                        />\n                      )\n                      )\n                      }\n                    </div>\n                  </div >\n                )}\n            </>\n          )}\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    films: getFilms(state),\n    isLoading: getIsLoading(state),\n    filmsLoaded: getFilmsLoaded(state),\n    term: getTermForSearch(state),\n    error: getError(state),\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    loadFilms: () => dispatch(loadFilms()),\n    onName: () => dispatch(sortByName()),\n    onEpisod: () => dispatch(sortByEpisod()),\n    onDate: () => dispatch(sortByDate()),\n    searching: (e) => dispatch(sortByLive(e.target.value))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React, { useState, useEffect, Fragment } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { loadingPlanets, saveCurrentPlanet } from '../redux/actions';\nimport List from '@material-ui/core/List';\nimport { getUrl } from '../../utils/index';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport './Planets.scss'\nimport { changeHttpToHttps } from '../../utils/index'\n\nfunction Planets({ urls, needPlanets, savePlanets, planets, history, saveCurrentPlanet }) {\n\n  const [loading, setLoading] = useState(needPlanets !== null)\n\n  useEffect(() => {\n    async function fetchData() {\n      let newUrls = changeHttpToHttps(urls);\n\n      let requests = newUrls.map(url => fetch(url));\n\n      await Promise.all(requests)\n        .then(async responses => await Promise.all(responses.map(planet => planet.json())))\n        .then(planets => savePlanets(planets))\n\n      setLoading(false);\n    };\n\n    if (needPlanets) {\n      fetchData();\n    }\n\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <CircularProgress color=\"secondary\" size={50} />\n      ) : (\n          <>\n            <List className=\"list\" component=\"ul\" aria-label=\"secondary mailbox folders\">\n              <h3>PLANETS</h3>\n              {planets.map((planet, index) =>\n                <Fragment key={planet.name}>\n                  <ListItem button>\n                    <ListItemText\n                      onClick={() => {\n                        history.push('/planets/' + getUrl(planets[index].url))\n                        saveCurrentPlanet(planet)\n                      }}\n                      primary={planet.name}\n                    />\n                  </ListItem>\n                  <Divider light={true} />\n                </Fragment>\n              )}\n            </List>\n          </>\n        )\n      }\n    </>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    urls: state.needPlanets,\n    planets: state.showPlanets,\n    needPlanets: state.needPlanets\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    savePlanets: (data) => dispatch(loadingPlanets(data)),\n    saveCurrentPlanet: (data) => dispatch(saveCurrentPlanet(data)),\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Planets));","import React, { useState, useEffect, Fragment } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport List from '@material-ui/core/List';\nimport { getUrl } from '../../utils/index';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport { withRouter } from 'react-router-dom';\nimport { loadingStarships, saveCurrentShip } from '../redux/actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeHttpToHttps } from '../../utils/index'\n\nfunction Starships({ history }) {\n\n  const { urls, starships, needStarships } = useSelector(state => ({\n    urls: state.needStarships,\n    starships: state.showStarships,\n    needStarships: state.needStarships\n  }))\n\n  const dispatch = useDispatch();\n\n  const [loading, setLoading] = useState(needStarships !== null)\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        let newUrls = changeHttpToHttps(urls);\n        let requests = newUrls.map(url => fetch(url));\n\n        await Promise.all(requests)\n          .then(async responses => await Promise.all(responses.map(starship => starship.json())))\n          .then(starships => dispatch(loadingStarships(starships)));\n\n        setLoading(false)\n\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    if (needStarships) {\n      fetchData();\n    }\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <CircularProgress color=\"secondary\" />\n      ) : (\n          <>\n            <List className=\"list list--left\" component=\"ul\" aria-label=\"secondary mailbox folders\">\n              <h3>STARSHIPS</h3>\n              {starships.map((starship, index) =>\n                <Fragment key={starship.name}>\n                  <ListItem button>\n                    <ListItemText\n                      onClick={() => {\n                        history.push('/starships/' + getUrl(starships[index].url))\n                        dispatch(saveCurrentShip(starship))\n                      }}\n                      primary={starship.name} />\n                  </ListItem>\n                  <Divider light={true} />\n                </Fragment>\n              )}\n            </List>\n          </>\n        )\n      }\n    </>\n  );\n}\n\nexport default withRouter(Starships);","import React, { useState, useEffect } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport s from './Film.module.scss';\nimport Planets from '../Planets/Planets';\nimport { saveCurrentFilm } from '../redux/actions';\nimport { API } from '../../constants/api';\nimport Starships from '../Starships/Starships';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SaveIcon from '@material-ui/icons/Save';\n\nfunction Film(props) {\n\n  const [loading, setLodaing] = useState(props.film === null)\n  // const [poster, setPoster] = useState(null) //*\n  const [starships, setStarships] = useState(false)\n  const [planets, setPlanets] = useState(false)\n\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch(`${API}${props.location.pathname}/`);\n        const data = await response.json();\n        // const urlPoster = `https://api.themoviedb.org/3/search/movie?api_key=0ee32771ac12a2b0b6c306f4f382cdf3&query=${data.title}`; // *\n        // const reqPoster = await fetch(urlPoster); //*\n        // const dataPoster = await reqPoster.json(); //*\n        props.saveCurrentFilm(data);\n        // setPoster(dataPoster.results[0].poster_path); //*\n        setLodaing(false);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    if (!props.film) {\n      fetchData();\n    }\n\n  }, []);\n\n  const useStyles = makeStyles(theme => ({\n    button: {\n      margin: theme.spacing(1),\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <>\n      {loading ? (\n        <div className=\"spinner\">\n          <CircularProgress color=\"secondary\" size={200} />\n        </div>\n      ) : (\n\n          <Box display=\"flex\" className={s.root}>\n            {/* <div className={s.imgwrapper}>\n              <img className={s.img} src={`https://image.tmdb.org/t/p/w500${poster}`} alt={props.film.title} />\n            </div> */}\n\n            <div className={s.left}>\n              <h1>{props.film.title}</h1>\n              <h2>Episod {props.film.episode_id}, Release Date: {props.film.release_date}</h2>\n              <p className=\"text\" >{props.film.opening_crawl}</p>\n              <h3>Director: {props.film.director}</h3>\n              <h3>Producer: {props.film.producer}</h3>\n              <div className={s.buttons}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"inherit\"\n                  size=\"large\"\n                  className={classes.button}\n                  startIcon={<SaveIcon />}\n                  onClick={() => setPlanets(true)}\n                  disabled={planets}\n                >\n                  Planets\n                </Button>\n\n                <Button\n                  variant=\"outlined\"\n                  color=\"inherit\"\n                  size=\"large\"\n                  className={classes.button}\n                  startIcon={<SaveIcon />}\n                  onClick={() => setStarships(true)}\n                  disabled={starships}\n                >\n                  Starships\n              </Button>\n              </div>\n              <div className={s.bottom}>\n                {planets ? <Planets /> : null}\n                {starships ? <Starships /> : null}\n              </div>\n            </div>\n          </Box>\n        )\n      }\n    </>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    film: state.currentFilm,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    saveCurrentFilm: (data) => dispatch(saveCurrentFilm(data))\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Film);","import React, { useState, useEffect, Fragment } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withRouter } from 'react-router-dom'\nimport List from '@material-ui/core/List';\nimport { getUrl } from '../../utils/index';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport { saveNeedFilms, saveCurrentFilm } from '../redux/actions';\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction Films(props) {\n\n  const { films } = useSelector(state => ({\n    films: state.needFilms,\n  }))\n\n  const dispatch = useDispatch()\n\n  const [loading, setLoading] = useState(!films.length)\n\n  useEffect(() => {\n    async function fetchData() {\n\n      let requests = props.urls.map(url => fetch(url));\n\n      await Promise.all(requests)\n        .then(async responses => await Promise.all(responses.map(r => r.json())))\n        .then(data => dispatch(saveNeedFilms(data)));\n\n      setLoading(false)\n    };\n\n    if (films.length === 0) {\n      fetchData();\n    }\n  }, [props]);\n\n  return (\n    <>\n      {loading ? (\n        <div className=\"spinner\">\n          <CircularProgress color=\"secondary\" size={200} />\n        </div>\n      ) : (\n          <List className=\"list\" component=\"ul\" aria-label=\"secondary mailbox folders\">\n            <h3>FILMS</h3>\n            {films.map((film, index) =>\n              <Fragment key={film.title}>\n                <ListItem button key={index}>\n                  <ListItemText\n                    onClick={() => {\n                      props.history.push('/films/' + getUrl(props.urls[index]))\n                      dispatch(saveCurrentFilm(film))\n                    }}\n                    primary={film.title}\n                  />\n                </ListItem>\n                <Divider light={true} />\n              </Fragment>\n            )}\n          </List>\n        )\n      }\n    </>\n  );\n}\n\nexport default withRouter(Films);\n","import React, { useState, useEffect } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Films from '../Films/Films';\nimport Button from '@material-ui/core/Button';\nimport { API } from '../../constants/api';\nimport './Planet.scss';\nimport { saveCurrentPlanet } from '../redux/actions';\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction Planet({ location, history }) {\n\n  const { currentPlanet } = useSelector(state => ({ //вместо mapStateToProps\n    currentPlanet: state.currentPlanet,\n  }));\n\n  const dispatch = useDispatch(); //вместо mapDispatchToProps\n\n  const [loading, setLodaing] = useState(currentPlanet === null)\n  const [films, setFilms] = useState(false)\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch(`${API}${location.pathname}/`);\n\n        const planet = await response.json();\n        dispatch(saveCurrentPlanet(planet))\n        setLodaing(false)\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    if (!currentPlanet) {\n      fetchData();\n    }\n\n  }, [location]);\n\n  return (\n    <>\n      {loading ? (\n        <CircularProgress color=\"secondary\" />\n      ) : (\n          <div className=\"planet\">\n            <h1>{currentPlanet.name}</h1>\n            <h3>Rotation Period {currentPlanet.rotation_period}</h3>\n            <h3>Orbital Period: {currentPlanet.orbital_period}</h3>\n            <h3>Diameter: {currentPlanet.diameter}</h3>\n            <h3>Climate: {currentPlanet.climate}</h3>\n            <h3>Gravity: {currentPlanet.gravity}</h3>\n            <p>Terrain: {currentPlanet.terrain}</p>\n            <p>Population: {currentPlanet.population}</p>\n\n            <Button\n              variant=\"outlined\"\n              color=\"inherit\"\n              size=\"large\"\n              disabled={films}\n              onClick={() => setFilms(true)}\n            >\n              FILMS\n            </Button>\n            <Button\n              variant=\"outlined\"\n              color=\"inherit\"\n              size=\"large\"\n              onClick={() => history.goBack()}\n            >\n              GO BACK\n            </Button>\n            {films ? <Films urls={currentPlanet.films} /> : null}\n          </div>\n        )\n      }\n    </>\n  );\n}\n\nexport default Planet;","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { saveCurrentShip } from '../redux/actions';\nimport { API } from '../../constants/api';\nimport Films from '../Films/Films';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction Starship(props) {\n  const { currentShip } = useSelector(state => ({\n    currentShip: state.currentShip,\n  }));\n\n  const dispatch = useDispatch();\n\n  const [loading, setLodaing] = useState(currentShip === null)\n  const [films, setFilms] = useState(false)\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch(`${API}${props.location.pathname}/`);\n        const ship = await response.json();\n        dispatch(saveCurrentShip(ship))\n        setLodaing(false)\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    if (!currentShip) {\n      fetchData();\n    }\n\n  }, [props]);\n\n  return (\n    <>\n      {loading ? (\n        <CircularProgress color=\"secondary\" size={200} />\n      ) : (\n          <div className=\"planet\">\n            <h1>{currentShip.name}</h1>\n            <h3>Model {currentShip.model}</h3>\n            <h3>Manufacturer: {currentShip.manufacturer}</h3>\n            <h3>Cost In Credits: {currentShip.cost_in_credits}</h3>\n            <h3>Length: {currentShip.length}</h3>\n            <p>Crew: {currentShip.crew}</p>\n\n            <Button\n              variant=\"outlined\"\n              color=\"inherit\"\n              size=\"large\"\n              disabled={films}\n              onClick={() => setFilms(true)}\n            >\n              FILMS\n            </Button>\n            <Button\n              variant=\"outlined\"\n              color=\"inherit\"\n              size=\"large\"\n              onClick={() => props.history.goBack()}\n            >\n              GO BACK\n            </Button>\n            {films ? <Films urls={currentShip.films} /> : null}\n          </div>\n        )\n      }\n    </>\n  );\n}\n\nexport default Starship;","import React from 'react';\n\nfunction NotFound(props) {\n  return (\n    <div>\n      404 NOT FOUND\n    </div>\n  );\n}\n\nexport default NotFound;","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n} from \"react-router-dom\";\nimport Home from './Components/Home/Home';\nimport Film from './Components/Film/Film';\nimport Planet from './Components/Planet/Planet';\nimport Starship from './Components/Starship/Starship';\nimport NotFound from './Components/NotFound/NotFound';\nimport './App.css';\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <div className='container'>\n          <NavLink className=\"nav\" to=\"/\">Home</NavLink>\n\n          <hr />\n\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/films/:id\" component={Film} />\n            <Route path=\"/planets/:id\" component={Planet} />\n            <Route path=\"/starships/:id\" component={Starship} />\n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './Components/redux/rootReducer';\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(\n  rootReducer, composeWithDevTools(applyMiddleware(thunk))\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}